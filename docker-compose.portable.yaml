version: '3.8'

services:
  mongodb:
    image: docker.io/mongo:8
    container_name: arkvote_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: arkvote
      MONGO_INITDB_ROOT_PASSWORD: arkvote_password
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongodb:/data/db
    networks:
      - internal-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb-exporter:
    image: percona/mongodb_exporter:latest
    container_name: arkvote_mongodb-exporter
    restart: unless-stopped
    ports:
      - "9216:9216"
    environment:
      - MONGODB_URI=mongodb://arkvote:arkvote_password@mongodb:27017/admin
    networks:
      - internal-network
    depends_on:
      mongodb:
        condition: service_healthy

  redis:
    image: docker.io/redis:8-alpine
    container_name: arkvote_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --appendfsync everysec --no-appendfsync-on-rewrite yes
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    networks:
      - internal-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-exporter:
    image: oliver006/redis_exporter:v1.45.0
    networks:
      - internal-network
    volumes:
      - ./data/redis-exporter:/data
    command: ["--redis.addr", "redis://redis:6379"]
    depends_on:
      redis:
        condition: service_healthy

  prometheus:
    image: prom/prometheus:latest
    networks:
      - internal-network
    user: "root"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml 
      - ./data/prometheus:/prometheus:Z 
    depends_on:
      - redis-exporter

  grafana:
    image: grafana/grafana:latest
    networks:
      - internal-network
      - external-network
    ports:
      - "9877:9877"
    user: "root"
    volumes:
      - ./data/grafana/data:/var/lib/grafana
      - ./data/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus

  ark-vote:
    build:
      context: .
      dockerfile: Dockerfile
    image: ccr.ccs.tencentyun.com/qwerdvd/ark-vote:latest
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      - APP_ENV=docker
      - ARK_VOTE_ADMIN_ENABLED=false
    volumes:
      - ./character_table.json:/app/character_table.json
      - ./docker_config:/app/config
      - ./logs:/app/logs
    networks:
      - internal-network
      - external-network
    command: ["portable-server"]

networks:
  internal-network:
    internal: true
  external-network:
    internal: false
